<Window x:Class="Graph_Constructor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ab2d="clr-namespace:Ab2d.Controls;assembly=Ab2d.Controls.ZoomPanel"
        xmlns:converters="clr-namespace:Graph_Constructor.Converters"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="Graph Constructor" Height="750" KeyDown="DrawingArea_KeyDown" MinHeight="400" Background="#ecf5f9" MinWidth="700" Width="1200">
    <Window.Resources>
        <converters:MatrixCellValidator x:Key="MatrixCellValidator"/>
        <converters:MultiBoolOrConverter x:Key="MultiBoolOrConverter"/>

        <CollectionViewSource Source="{Binding Vertices}" x:Key="VerticesList">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <DataTemplate x:Key="MatrixCell">
            <TextBox x:Name="Cell" Tag="{Binding CellId}" 
                     PreviewTextInput="Cell_PreviewTextInput" 
                     LostFocus="Cell_LostFocus" 
                     TextChanged="Cell_TextChanged" 
                     GotFocus="Cell_GotFocus" 
                     IsMouseCaptureWithinChanged="Cell_IsMouseCaptureWithinChanged" 
                     GotMouseCapture="Cell_GotMouseCapture" 
                     FontFamily="Arial" FontSize="15" 
                     VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                     TextAlignment="Center" Margin="1" Height="25.3" Width="25.3">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource MatrixCellValidator}">
                        <Binding Path="Value" Mode="TwoWay"/>
                        <Binding Path="GraphType" Mode="OneWay"/>
                    </MultiBinding>
                </TextBox.Text>
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <!--<MultiTrigger >
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="1"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="16"/>
                            </MultiTrigger>
                            <Trigger Property="Value" Value="0">
                                <Setter Property="FontWeight" Value="Light"/>
                                <Setter Property="FontSize" Value="15"/>
                            </Trigger>-->
                            <DataTrigger Binding="{Binding Value}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <!--<Trigger Property="Text" Value="∞">
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>-->
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </DataTemplate>
        <DataTemplate x:Key="Matrix">
            <ItemsControl ItemsSource="{Binding}" ItemTemplate="{DynamicResource MatrixCell}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="HeaderCell">
            <TextBlock Text="{Binding Id}" FontSize="18" FontWeight="Bold" FontFamily="Italic"  Height="27.5" Width="27.5" TextAlignment="Center" />
        </DataTemplate>
        <DataTemplate x:Key="BellmanHeaderCell">
            <TextBlock Text="{Binding}" FontSize="18" FontWeight="Bold" FontFamily="Italic"  Height="27.5" Width="27.5" TextAlignment="Center" />
        </DataTemplate>
        <ItemsPanelTemplate x:Key="HorizontalHeader">
            <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="VerticalHeader">
            <StackPanel Orientation="Vertical"/>
        </ItemsPanelTemplate>
        
        <DataTemplate x:Key="BellmanResultsMatrix">
            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBox x:Name="BellmanResultCell" IsReadOnly="True" FontFamily="Arial" FontSize="15" Text="{Binding Value, Converter = {StaticResource MatrixCellValidator}, Mode=OneWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" TextAlignment="Center" Margin="1" Height="25.3" Width="25.3"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
        
        <DataTemplate x:Key="List">
            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal">
                        </StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBox x:Name="Cell" FontFamily="Arial" FontSize="15" Text="{Binding Value}" IsReadOnly="True" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" TextAlignment="Center" Margin="1" Height="25.3" Width="25.3">
                        </TextBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
        <Style x:Key="iToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="border" Background="#ecf5f9" Padding="3 5">
                            <StackPanel Orientation="Horizontal">
                                <Path Name="ico" Data="{TemplateBinding Content}" Margin="3 0 3 0 " Fill="#1f54a1" Height="15" Width="15" Stretch="Uniform"/>
                                <TextBlock Name="title" FontSize="14" Text="{TemplateBinding Tag}" FontFamily="Arial"  VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#bbc2c5"/>
                                <Setter Property="BorderBrush" Value="#ecf5f9"/>
                            </Trigger>
                            
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#bbc2c5"/>
                                <Setter Property="BorderBrush" Value="#ecf5f9"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ico" Property="Fill" Value="#1d94cf"/>
                                <!--<Setter TargetName="title" Property="Foreground" Value="White"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" Background="#ecf5f9" BorderBrush="#bbc2c5" BorderThickness="2" >
                            <StackPanel Orientation="Horizontal">
                                <Path Name="ico" Data="{TemplateBinding Content}" Margin="3 0 3 0 " Fill="#1f54a1" Height="15" Width="15" Stretch="Uniform"/>
                                <TextBlock Name="title" FontSize="14" Text="{TemplateBinding Tag}" FontFamily="Arial"  VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#bbc2c5"/>
                            </Trigger>
                            
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ico" Property="Fill" Value="#1d94cf"/>
                                <!--<Setter TargetName="title" Property="Foreground" Value="White"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridCanvas" TargetType="Canvas">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ShowGrid, Path=IsChecked}" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <DrawingBrush TileMode="Tile" Viewport="20 20 20 20" ViewportUnits="Absolute">
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,100,100"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="#1e1e1e" Thickness="1"/>
                                        </GeometryDrawing.Pen>
                                    </GeometryDrawing>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=ShowGrid, Path=IsChecked}" Value="False">
                    <Setter Property="Background" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
            </Style>
        
        <PathGeometry x:Key="Move" Figures="M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z"/>
        <PathGeometry x:Key="Grid" Figures="M10,4V8H14V4H10M16,4V8H20V4H16M16,10V14H20V10H16M16,16V20H20V16H16M14,20V16H10V20H14M8,20V16H4V20H8M8,14V10H4V14H8M8,8V4H4V8H8M10,14H14V10H10V14M4,2H20A2,2 0 0,1 22,4V20A2,2 0 0,1 20,22H4C2.92,22 2,21.1 2,20V4A2,2 0 0,1 4,2Z"/>
        <PathGeometry x:Key="Run" Figures="M13,2.05V4.05C17.39,4.59 20.5,8.58 19.96,12.97C19.5,16.61 16.64,19.5 13,19.93V21.93C18.5,21.38 22.5,16.5 21.95,11C21.5,6.25 17.73,2.5 13,2.03V2.05M5.67,19.74C7.18,21 9.04,21.79 11,22V20C9.58,19.82 8.23,19.25 7.1,18.37L5.67,19.74M7.1,5.74C8.22,4.84 9.57,4.26 11,4.06V2.06C9.05,2.25 7.19,3 5.67,4.26L7.1,5.74M5.69,7.1L4.26,5.67C3,7.19 2.25,9.04 2.05,11H4.05C4.24,9.58 4.8,8.23 5.69,7.1M4.06,13H2.06C2.26,14.96 3.03,16.81 4.27,18.33L5.69,16.9C4.81,15.77 4.24,14.42 4.06,13M10,16.5L16,12L10,7.5V16.5Z"/>
        <PathGeometry x:Key="Erase" Figures="M 500 0C 224 0 0 224 0 500C 0 776 224 1000 500 1000C 776 1000 1000 776 1000 500C 1000 224 776 0 500 0C 500 0 500 0 500 0 M 667 202C 667 202 844 379 844 379C 878 413 878 469 844 503C 844 503 561 786 561 786C 554 793 545 797 535 797C 535 797 323 797 323 797C 313 797 303 793 296 786C 296 786 190 680 190 680C 156 646 156 590 190 556C 190 556 544 202 544 202C 561 186 583 177 605 177C 628 177 650 186 667 202C 667 202 667 202 667 202M 243 609C 238 614 238 621 243 627C 243 627 338 722 338 722C 338 722 519 722 519 722C 519 722 615 628 615 628C 615 628 420 434 420 434C 420 434 243 609 243 609"/>
        <PathGeometry x:Key="Weighted" Figures="M12,3A4,4 0 0,1 16,7C16,7.73 15.81,8.41 15.46,9H18C18.95,9 19.75,9.67 19.95,10.56C21.96,18.57 22,18.78 22,19A2,2 0 0,1 20,21H4A2,2 0 0,1 2,19C2,18.78 2.04,18.57 4.05,10.56C4.25,9.67 5.05,9 6,9H8.54C8.19,8.41 8,7.73 8,7A4,4 0 0,1 12,3M12,5A2,2 0 0,0 10,7A2,2 0 0,0 12,9A2,2 0 0,0 14,7A2,2 0 0,0 12,5M6,11V19H8V16.5L9,17.5V19H11V17L9,15L11,13V11H9V12.5L8,13.5V11H6M15,11C13.89,11 13,11.89 13,13V17C13,18.11 13.89,19 15,19H18V14H16V17H15V13H18V11H15Z"/>
        <PathGeometry x:Key="Directed" Figures="M14,14.5V12H10V15H8V11A1,1 0 0,1 9,10H14V7.5L17.5,11M21.71,11.29L12.71,2.29H12.7C12.31,1.9 11.68,1.9 11.29,2.29L2.29,11.29C1.9,11.68 1.9,12.32 2.29,12.71L11.29,21.71C11.68,22.09 12.31,22.1 12.71,21.71L21.71,12.71C22.1,12.32 22.1,11.68 21.71,11.29Z"/>
        <PathGeometry x:Key="Next" Figures="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M8,8V16L13,12M14,8V16H16V8"/>
        <PathGeometry x:Key="Previous" Figures="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4C7.59,4 4,7.59 4,12C4,16.41 7.59,20 12,20C16.41,20 20,16.41 20,12C20,7.59 16.41,4 12,4M16,8V16L11,12M10,8V16H8V8"/>
        <PathGeometry x:Key="Navigation" Figures="M12 2L16 6H13V13.85L19.53 17.61L21 15.03L22.5 20.5L17 21.96L18.53 19.35L12 15.58L5.47 19.35L7 21.96L1.5 20.5L3 15.03L4.47 17.61L11 13.85V6H8L12 2M21 5H19V3H21V5M22 10V12H18V10H19V8H18V6H21V10H22Z"/>
        <PathGeometry x:Key="Minus" Figures="M19,13H5V11H19V13Z"/>
        <PathGeometry x:Key="Save" Figures="M14,2H6C4.89,2 4,2.89 4,4V20C4,21.11 4.89,22 6,22H18C19.11,22 20,21.11 20,20V8L14,2M12,19L8,15H10.5V12H13.5V15H16L12,19M13,9V3.5L18.5,9H13Z"/>
        <PathGeometry x:Key="Read" Figures="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M13.5,16V19H10.5V16H8L12,12L16,16H13.5M13,9V3.5L18.5,9H13Z"/>
        <PathGeometry x:Key="Info" Figures="M11 9H13V7H11V9M14 17V15H13V11H10V13H11V15H10V17H14M5 3H19C20.1 3 21 3.89 21 5V19C21 19.53 20.79 20.04 20.41 20.41C20.04 20.79 19.53 21 19 21H5C4.47 21 3.96 20.79 3.59 20.41C3.21 20.04 3 19.53 3 19V5C3 3.89 3.89 3 5 3M19 19V5H5V19H19Z"/>
    </Window.Resources>
    <Grid Name="grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.ColumnSpan="3" Margin="20 5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" x:Name="AlgorithmsPanel"  VerticalAlignment="Top">
                    <Label DockPanel.Dock="Left" FontWeight="Bold">Select algorithm:</Label>
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" Name="RunDFS" Tag="DFS" Content="DFS"/>
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" Name="RunBFS" Tag="BFS" Content="BFS"/>
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" IsEnabled="{Binding IsWeightedGraph}" Name="RunFord" Tag="Ford" Content="Ford"/>
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" IsEnabled="{Binding IsWeightedGraph}" Name="RunBellmanCalaba" Tag="BellmanCalaba" Content="Bellman-Calaba"/>
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" IsEnabled="{Binding IsWeightedGraph}" Name="RunFordFulkersson" Tag="FordFulkersson" Content="Ford-Fulkersson"/>
                    <!--<RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" IsEnabled="{Binding IsWeightedGraph}" Name="RunDjikstra" Tag="Djikstra" Content="Djikstra"/>-->
                    <RadioButton GroupName="Algorithm" VerticalContentAlignment="Center" Height="20" Margin="0 0 5 0" IsEnabled="{Binding IsWeightedGraph}" Name="RunSpanningTree" Tag="Prim" Content="Minimum Spanning Tree(Prim's)"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <ToggleButton x:Name="ShowFormatInfo" Margin="10 0 0 0" Style="{StaticResource iToggleButtonStyle}" Click="ShowFormatInfo_Click" IsChecked="True" Content="{DynamicResource Info}"/>
                    <Button x:Name="ReadGraph" Click="ReadGraph_Click" Margin="5 0 0 0" Style="{StaticResource ButtonStyle}" Tag="Read graph " Content="{DynamicResource Read}"/>
                    <Button x:Name="SaveGraph" Click="SaveGraph_Click" Margin="5 0 0 0" Style="{StaticResource ButtonStyle}" Tag="Save graph " Content="{DynamicResource Save}"/>
                </StackPanel>
            </DockPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0 5 0 0" VerticalAlignment="Center">
                <xctk:WatermarkTextBox Height="25" x:Name="StartVertex" Watermark="Enter start" TextAlignment="Center" FontSize="12" Width="65">
                    <xctk:WatermarkTextBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBoolOrConverter}">
                            <Binding Path="IsChecked" ElementName="RunDFS" />
                            <Binding Path="IsChecked" ElementName="RunBFS" />
                            <Binding Path="IsChecked" ElementName="RunFord" />
                            <Binding Path="IsChecked" ElementName="RunBellmanCalaba" />
                            <Binding Path="IsChecked" ElementName="RunFordFulkersson" />
                            <Binding Path="IsChecked" ElementName="RunSpanningTree" />
                        </MultiBinding>
                    </xctk:WatermarkTextBox.IsEnabled>
                </xctk:WatermarkTextBox>
                <Button x:Name="RunAlgorithm" Click="RunAlgorithm_Click" Margin="5 0 0 0" Style="{StaticResource ButtonStyle}" Tag="Run Algorithm " Content="{DynamicResource Run}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBoolOrConverter}">
                            <Binding Path="IsChecked" ElementName="RunDFS" />
                            <Binding Path="IsChecked" ElementName="RunBFS" />
                            <Binding Path="IsChecked" ElementName="RunFord" />
                            <Binding Path="IsChecked" ElementName="RunBellmanCalaba" />
                            <Binding Path="IsChecked" ElementName="RunFordFulkersson" />
                            <Binding Path="IsChecked" ElementName="RunSpanningTree" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <DockPanel VerticalAlignment="Center">
                    <Label DockPanel.Dock="Left" FontWeight="Bold">Speed:</Label>
                    <Slider x:Name="ExecutionSpeedSlider" Foreground="Black" Minimum="1" Value="30" Maximum="100" Width="200" TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="10"/>
                </DockPanel>
            </StackPanel>
        </Grid>
        <Grid x:Name="InfoFormat" Panel.ZIndex="10" Grid.RowSpan="2" Grid.ColumnSpan="3" VerticalAlignment="Top" Width="220" HorizontalAlignment="Right" Margin="0 35 150 0">
            <Rectangle RadiusX="3" RadiusY="3" Fill="#AAFFFFFF" Stroke="LightGray" StrokeThickness="2"/>
            <StackPanel Orientation="Vertical" Margin="5">
                <TextBlock FontWeight="Bold" Margin="0 0 0 2">File format for reading graph:</TextBlock>
                <TextBlock TextWrapping="Wrap">First line specify graph type and number of vertices:<LineBreak />
                    <Bold FontSize="10">Weighted or Undirected or Directed,n</Bold>
                </TextBlock>
                <TextBlock TextWrapping="Wrap">Starting from second line list the edges</TextBlock>
                <TextBlock TextWrapping="Wrap">Each edge from a new line</TextBlock>
                <TextBlock TextWrapping="Wrap">E.g:</TextBlock>
                <TextBlock TextWrapping="Wrap">1 2 4</TextBlock>
                <TextBlock TextWrapping="Wrap">1,2,4</TextBlock>
                <TextBlock TextWrapping="Wrap">In case of a weighted graph the third number of the edge represents the weight/cost. <LineBreak/>In other cases specify only the start vertex and end. (1,2)</TextBlock>
                <TextBlock TextWrapping="Wrap">Delimitors: " ", "," or ";"</TextBlock>
            </StackPanel>
        </Grid>
        <Grid Margin="20 0 10 0" Grid.Row="1">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition MinHeight="250"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DockPanel>
                    <TextBlock FontSize="16" VerticalAlignment="Center" FontFamily="Consolas italic" Margin="2 0 0 0" Text="Sandbox"/>
                    <ToggleButton x:Name="ShowKeybordNavigation" Margin="10 0 0 0" Style="{StaticResource iToggleButtonStyle}" Click="ShowKeybordNavigation_Click" IsChecked="True" Content="{DynamicResource Navigation}"/>
                    <DockPanel HorizontalAlignment="Right">
                        <ab2d:ZoomController Background="Transparent" />
                    </DockPanel>
                </DockPanel>
                <Grid Grid.Row="1" Name="CanvasParent">
                    <ab2d:ZoomPanel Stretch="None" ViewboxLimits="0 0 1 1" ViewboxMinSize="0.1 0.1" IsViewboxLimited="True"  Name="ZoomingPanel">
                        <Border Name="GraphTypePopupBlurEffect" Background="White" BorderBrush="Black">
                            <Border.Effect>
                                <BlurEffect Radius="10" KernelType="Gaussian"/>
                            </Border.Effect>
                            <Canvas Name="DrawingArea" IsEnabled="False" Height="2000" Width="2000" Style="{StaticResource GridCanvas}" ClipToBounds="True"
                                    MouseRightButtonDown="DeleteGraphElement_Click" 
                                    MouseMove="MoveVertexOnCanvas" 
                                    MouseLeftButtonDown="DrawGraphElement_Click"/>
                        </Border>
                    </ab2d:ZoomPanel>
                    <DockPanel Name="GraphTypePopup" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="Select graph type" Margin="2" FontSize="16" FontFamily="Verdana" HorizontalAlignment="Center" />
                            <Button x:Name="UndirectedGraph" Click="CreateNewGraph_Click" Margin="2" Height="35" Style="{StaticResource ButtonStyle}" Tag="Undirected Graph " Content="{DynamicResource Minus}"/>
                            <Button x:Name="DirectedGraph" Click="CreateNewGraph_Click" Margin="2" Height="35" Style="{StaticResource ButtonStyle}" Tag="Directed Graph " Content="{DynamicResource Directed}"/>
                            <Button x:Name="WeightedGraph" Click="CreateNewGraph_Click" Margin="2" Height="35" Style="{StaticResource ButtonStyle}" Tag="Weighted Graph " Content="{DynamicResource Weighted}"/>
                        </StackPanel>
                    </DockPanel>
                </Grid>
            <StackPanel Orientation="Horizontal" Grid.Row="2">
                <ToggleButton x:Name="ShowGrid" Style="{StaticResource iToggleButtonStyle}" IsChecked="True" Tag="Show Grid " Content="{DynamicResource Grid}"/>
                <ToggleButton Name="MoveMode" Style="{StaticResource iToggleButtonStyle}" Tag="Move vertices " Content="{DynamicResource Move}"/>
                <Button x:Name="ClearCanvasBtn" Click="ClearCanvas_Click" Style="{StaticResource ButtonStyle}" Tag="Clear " Content="{DynamicResource Erase}"/>
                <StackPanel Orientation="Horizontal">
                    <Button Name="GetPrevious" Click="GetPrevious_Click" Style="{StaticResource ButtonStyle}" Content="{DynamicResource Previous}"/>
                    <Button Name="GetNext" Click="GetNext_Click" Style="{StaticResource ButtonStyle}" Content="{DynamicResource Next}"/>
                </StackPanel>
               </StackPanel>
        </Grid>
            <Grid x:Name="Navigation" VerticalAlignment="Top" Width="200" HorizontalAlignment="Left" Margin="3 35 0 0">
                <Rectangle RadiusX="3" RadiusY="3" Fill="#AAFFFFFF" Stroke="LightGray" StrokeThickness="2"/>
                <StackPanel Orientation="Vertical" Margin="5">
                    <TextBlock FontWeight="Bold" Margin="0 0 0 2">Keyboard navigation:</TextBlock>
                    <TextBlock FontWeight="DemiBold">For drawing graphs</TextBlock>
                    <TextBlock>LEFT-CLICK - draw a vertex</TextBlock>
                    <TextBlock TextWrapping="Wrap">LEFT-CLICK(on two vertices)- draw an edge</TextBlock>
                    <TextBlock>RIGHT-CLICK - remove vertex/edge</TextBlock>
                    <TextBlock Margin="0 2 0 0" FontWeight="DemiBold">For zooming and panning</TextBlock>
                    <TextBlock>SPACE - toggle move</TextBlock>
                    <TextBlock>SHIFT + SPACE - toggle Zoom In</TextBlock>
                    <TextBlock>CTRL + SPACE - toggle Zoom Out</TextBlock>
                    <TextBlock FontWeight="Bold" Margin="0 5 0 2">Color legend:</TextBlock>
                    <TextBlock>
                        <TextBlock.Inlines>
                            <Run FontWeight="Bold"  Foreground="Red" Text="Red" />
                            <Run Text="- Visited vertex or edge" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock>
                        <TextBlock.Inlines>
                            <Run FontWeight="Bold"  Foreground="Green" Text="Green" />
                            <Run Text="- Current selected vertex" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock>
                        <TextBlock.Inlines>
                            <Run FontWeight="Bold"  Foreground="#279fdb" Text="Blue" />
                            <Run Text="- Done vertex" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock>
                        <TextBlock.Inlines>
                            <Run FontWeight="Bold"  Foreground="#1f54a1" Text="Dark Blue" />
                            <Run Text="- Edge weight" />
                        </TextBlock.Inlines>
                    </TextBlock>
                    <TextBlock FontWeight="Bold" Margin="0 5 0 2">Other:</TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{DynamicResource Previous}" Height="15" Width="15" Stretch="Uniform" Fill="#1f54a1"/>
                        <Path Data="{DynamicResource Next}" Height="15" Width="15" Stretch="Uniform" Fill="#1f54a1"/>
                        <TextBlock TextWrapping="Wrap"> - Algorithm step navigation</TextBlock>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Grid>
        <GridSplitter Grid.Row="1" Grid.Column="1" Width="5" HorizontalAlignment="Center" />
        <TabControl Grid.Row="1" Grid.Column="2" Margin="10 0 20 25">
            <TabItem Header="Adjacency matrix" FontFamily="Consolas italic" IsSelected="True">
                <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                    <Grid Margin="10" x:Name="WeightedMatrixParent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ItemsControl Grid.Column="1" x:Name="MatrixHorizontalHeader" ItemsSource="{Binding Source={StaticResource VerticesList}}" ItemsPanel="{DynamicResource HorizontalHeader}" ItemTemplate="{DynamicResource HeaderCell}"/>
                        <ItemsControl Grid.Row="1" Grid.Column="1" x:Name="AdjacencyMatrix" ItemsSource="{Binding Matrix}" ItemTemplate="{DynamicResource Matrix}"/>
                        <ItemsControl Grid.Row="1" x:Name="MatrixVerticalHeader" Margin="0 0 5 0" ItemsSource="{Binding Source={StaticResource VerticesList}}" ItemsPanel="{DynamicResource VerticalHeader}" ItemTemplate="{DynamicResource HeaderCell}"/>
                        <ItemsControl Grid.Row="2" x:Name="BellmanResultsVerticalHeader" Margin="0 0 5 0" ItemsPanel="{DynamicResource VerticalHeader}" ItemTemplate="{DynamicResource BellmanHeaderCell}"/>
                        <ItemsControl Grid.Row="2" Grid.Column="1" x:Name="BellmanAlgoResultsMatrix"  ItemTemplate="{DynamicResource BellmanResultsMatrix}"/>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Adjacency list" FontFamily="Consolas italic">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ItemsControl x:Name="ListVerticalHeader" ItemsSource="{Binding Vertices}" ItemsPanel="{DynamicResource VerticalHeader}" ItemTemplate="{DynamicResource HeaderCell}"/>
                    <ItemsControl Grid.Column="1" x:Name="AdjacencyList" ItemsSource="{Binding AdjList}" ItemTemplate="{DynamicResource List}"/>
                </Grid>
            </TabItem>
            <TabItem Header="Logs" FontFamily="Consolas italic">
                <ScrollViewer>
                    <StackPanel x:Name="AlgoLogs" Margin="5"/>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
